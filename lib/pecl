
function enable_pecl_extension() {
  local extension_name="${1}"
  local is_zend_extension_var_name="PHP_PECL_EXTENSION_IS_ZEND_$extension_name"
  local is_zend_extension=$(printenv $is_zend_extension_var_name)

  if [[ $is_zend_extension = "true" ]] ; then
    echo "zend_extension=${extension_name}.so" > "/app/vendor/php/etc/conf.d/${extension_name}.ini"
  else
    echo "extension=${extension_name}.so" > "/app/vendor/php/etc/conf.d/${extension_name}.ini"
  fi
}

function install_apt_libaio() {
  # ----
  # Install libaio to install oci8
  echo "Installing libaio for oci8"

  local build_dir="${1}"
  local cache_dir="${2}"

  echo "libaio1" > "${build_dir}/Aptfile"

  apt_deps_buildpack_dir=$(mktemp apt_buildpack_XXXX)
  rm "${apt_deps_buildpack_dir}"

  readonly apt_buildpack_url="https://github.com/Scalingo/apt-buildpack.git"
  git clone --depth=1 "${apt_buildpack_url}" "${build_dir}/$apt_deps_buildpack_dir" > /dev/null

  "${build_dir}/${apt_deps_buildpack_dir}/bin/compile" "${build_dir}" "${cache_dir}" "${env_dir}" > /dev/null
}

function install_oracle_client_extension() {
  # ----
  # Install oracle client
  local build_dir="/app"
  local oracle_install_dir="${build_dir}/vendor/oracle-client/"
  mkdir -p "${oracle_install_dir}"

  curl --silent https://download.oracle.com/otn_software/linux/instantclient/instantclient-basic-linuxx64.zip --output oracleclient.zip
  unzip -q oracleclient.zip -d "${oracle_install_dir}"
  rm oracleclient.zip

  export ORACLE_HOME="${oracle_install_dir}$(ls ${oracle_install_dir})"
  export LD_LIBRARY_PATH="${ORACLE_HOME}/lib:${ORACLE_HOME}:${LD_LIBRARY_PATH}"

  curl --silent https://download.oracle.com/otn_software/linux/instantclient/instantclient-sdk-linuxx64.zip --output oraclesdk.zip
  unzip -q oraclesdk.zip -d "${oracle_install_dir}"
  rm oraclesdk.zip

  local startup_script="${1}/.profile.d/oracle-client.sh"
  echo "export ORACLE_HOME=${ORACLE_HOME}" >> "${startup_script}"
  echo "export LD_LIBRARY_PATH=${ORACLE_HOME}/lib:${ORACLE_HOME}:\${LD_LIBRARY_PATH}" >> "${startup_script}"
}

function install_pecl_extension() {
  local extension_name="${1}"
  local version="${2}"
  local cache_dir="${4}"

  if [[ $version = '*' ]]; then
    local version=$(curl --silent "https://pecl.php.net/rest/r/$extension_name/latest.txt")
  fi
  local ext_dir=/app/vendor/php/lib/php/extensions/no-debug-non-zts-$(php_api_version)

  local cache_extension_file="${cache_dir}/${extension_name}-${version}.so"
  if [ -f "${cache_extension_file}" ]; then
    echo "Installing PECL extension ${extension_name} version ${version} from the cache"
    cp "${cache_extension_file}" "${ext_dir}/${extension_name}.so"
    enable_pecl_extension ${extension_name}
    return
  fi

  local build_dir=$(pwd)
  local temp_dir=$(mktmpdir "pecl-extension")

  echo "Installing PECL extension ${extension_name} version ${version}"

  pushd "${temp_dir}" > /dev/null

  curl --silent --location "https://pecl.php.net/get/${extension_name}-${version}.tgz" | tar xz

  pushd ${extension_name}-${version} > /dev/null

  /app/vendor/php/bin/phpize &> /dev/null

  local configure_extension_args_var_name="PHP_PECL_EXTENSION_CONFIGURE_ARGS_$extension_name"
  local configure_extension_args=$(printenv $configure_extension_args_var_name)
  local flags=$(echo $configure_extension_args | sed "s|\$BUILD_DIR|$build_dir|")

  if [[ $extension_name = 'oci8' ]]; then
    if [ -e "${3}/${apt_deps_buildpack_dir}/export" ]; then
      source "${3}/${apt_deps_buildpack_dir}/export"
    fi
    flags="--with-oci8=instantclient,${ORACLE_HOME}"
  fi

  ./configure --with-php-config=/app/vendor/php/bin/php-config $flags > /dev/null

  make > /dev/null
  cp modules/${extension_name}.so "${ext_dir}/${extension_name}.so"
  cp modules/${extension_name}.so "${cache_extension_file}"
  enable_pecl_extension ${extension_name}

  popd > /dev/null
  popd > /dev/null
}
