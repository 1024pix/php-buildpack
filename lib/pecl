
function enable_pecl_extension() {
  local extension_name="${1}"
  local is_zend_extension_var_name="PHP_PECL_EXTENSION_IS_ZEND_$extension_name"
  local is_zend_extension=$(printenv $is_zend_extension_var_name)

  if [[ $is_zend_extension = "true" ]] ; then
    echo "extension=${extension_name}.so" > "/app/vendor/php/etc/conf.d/${extension_name}.ini"
  else
    echo "zend_extension=${extension_name}.so" > "/app/vendor/php/etc/conf.d/${extension_name}.ini"
  fi
}

function install_pecl_extension() {
  local extension_name="${1}"
  local version="${2}"
  local cache_dir="${3}"

  local ext_dir=/app/vendor/php/lib/php/extensions/no-debug-non-zts-$(php_api_version)

  local cache_extension_file="${cache_dir}/${extension_name}-${version}.so"
  if [ -f "${cache_extension_file}" ]; then
    echo "Installing PECL extension ${extension_name} version ${version} from the cache"
    cp "${cache_extension_file}" "${ext_dir}/${extension_name}.so"
    enable_pecl_extension ${extension_name}
    return
  fi

  local build_dir=$(pwd)
  local temp_dir=$(mktmpdir "pecl-extension")

  echo "Installing PECL extension ${extension_name} version ${version}"

  pushd "${temp_dir}" > /dev/null

  curl --silent --location "https://pecl.php.net/get/${extension_name}-${version}.tgz" | tar xz

  pushd ${extension_name}-${version} > /dev/null
  /app/vendor/php/bin/phpize > /dev/null

  local configure_extension_args_var_name="PHP_PECL_EXTENSION_CONFIGURE_ARGS_$extension_name"
  local configure_extension_args=$(printenv $configure_extension_args_var_name)
  local flags=$(echo $configure_extension_args | sed "s|\$BUILD_DIR|$build_dir|")

  ./configure --with-php-config=/app/vendor/php/bin/php-config $flags > /dev/null

  make > /dev/null
  cp modules/${extension_name}.so "${ext_dir}/${extension_name}.so"
  cp modules/${extension_name}.so "${cache_extension_file}"
  enable_pecl_extension ${extension_name}

  popd > /dev/null
  popd > /dev/null
}
